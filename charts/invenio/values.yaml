host: ess-digital-repository.swap.ess.eu

ingress:
  # these values have no effect on openshift
  enabled: true
  class: nginx
  sslSecretName: userofficelu

invenio:
  secret_key: "secret-key"
  security_login_salt: "security_login_salt"
  csrf_secret_salt: "csrf_secret_salt"
  existing_secret: false
  init: false
  # the variables below requires init=true
  default_users: # email:password
  demo_data: false # requires default_users
  sentry:
    enabled: false
    existing_secret: false
    secret_name: "sentry-secrets"
    dsn: ""
  datacite:
    enabled: false
    existing_secret: false
    secret_name: "datacite-secrets"
  remote_apps:
    enabled: false
    existing_secret: false
    secret_name: "remote-apps-secrets"
    credentials:
      - name: ""
        consumer_key: ""
        consumer_secret: ""
  extra_config:
    INVENIO_COLLECT_STORAGE: "flask_collect.storage.file"
    INVENIO_DATACITE_ENABLED: "False"
    INVENIO_LOGGING_CONSOLE_LEVEL: "WARNING"
    INVENIO_SEARCH_INDEX_PREFIX: ""
  extra_env_from_secret:
  file_configs:

haproxy:
  enabled: true
  image: "haproxy:2.8.3"
  replicas: 2
  maxconn: 100
  maxconn_static: 500
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 250m
      memory: 500Mi
  denied_ips: ""
  denied_uas: ""
  extra_frontend_public_http_request: ""
  http429_response: "You are being blocked. Please contact us."
  html_backup_website: |-
    <!DOCTYPE html>
    <html>
      <body>
          <h1>503 Service Unavailable</h1>
          <p>Under maintenance!</p>
      </body>
    </html>

nginx:
  image: "nginx:1.24.0"
  max_conns: 100
  assets:
    location: /opt/invenio/var/instance/static
  records:
    client_max_body_size: 100m
  files:
    client_max_body_size: 50G
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 250m
      memory: 500Mi
  extra_server_config: ""
  denied_ips: ""
  denied_uas: ""

web:
  image: your/invenio-image
  imagePullSecret: ""
  replicas: 6
  terminationGracePeriodSeconds: 60
  uwsgi:
    processes: 6
    threads: 4
  autoscaler:
    enabled: false
    # scale when CPU usage gets to
    scaler_cpu_utilization: 65
    max_web_replicas: 10
    min_web_replicas: 2
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  startupProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 5
  assets:
    location: /opt/invenio/var/instance/static
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  annotations: []

worker:
  enabled: true
  image: your/invenio-image
  imagePullSecret: ""
  app: invenio_app.celery
  concurrency: 2
  log_level: INFO
  replicas: 2
  run_mount_path: /var/run/celery
  celery_pidfile: /var/run/celery/celerybeat.pid
  celery_schedule: /var/run/celery/celery-schedule
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  volumes:
    enabled: false

workerBeat:
  resources:
    requests:
      cpu: 500m
      memory: 200Mi
    limits:
      cpu: "2"
      memory: 500Mi

persistence:
  enabled: true
  name: "shared-volume"
  access_mode: ReadWriteMany
  size: 10G
  storage_class: "nfs-storage"
  nfs:
    path: /opt/k8s-pods/data/digital-repository-shared-volume-dev
    server: scicatnfs-test.ess.eu


redis:
  enabled: true
  image: "redis:7.2.1"
  host: ""
  persistence:
    enabled: true
    name: "redis-volume"
    access_mode: ReadWriteMany
    size: 1G
    storage_class: "nfs-storage"
    nfs:
      path: /opt/k8s-pods/data/digital-repository-redis-volume-dev
      server: scicatnfs-test.ess.eu
  resources:
    limits:
      cpu: "1"
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 500Mi

rabbitmq:
  enabled: true
  image: "rabbitmq:3.12.6-management"
  existing_secret: false
  secret_name: "mq-secrets"
  default_password: "mq_password"
  celery_broker_uri: "amqp://guest:mq_password@mq:5672/"
  management_host: ""
  persistence:
    enabled: true
    name: "rabbitmq-volume"
    access_mode: ReadWriteMany
    size: 1G
    storage_class: "nfs-storage"
    nfs:
      path: /opt/k8s-pods/data/digital-repository-rabbitmq-volume-dev
      server: scicatnfs-test.ess.eu
  resources:
    limits:
      cpu: "1"
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 500Mi

flower:
  enabled: true
  image: "mher/flower:2.0"
  secret_name: "flower-secrets"
  default_username: "flower"
  default_password: "flower_password"
  host: ""
  resources:
    requests:
      memory: 125Mi
      cpu: 0.02
    limits:
      memory: 250Mi
      cpu: 0.1

postgresql:
  enabled: false
  existing_secret: false
  secret_name: "db-secrets"
  user: "invenio"
  password: "db_password"
  host: "db"
  port: "5432"
  database: "invenio"
  sqlalchemy_db_uri: "postgresql+psycopg2://invenio:db_password@db:5432/invenio"

elasticsearch:
  enabled: true
  secret_name: "elasticsearch-secret"
  invenio_hosts: "[{'host': 'elasticsearch'}]"
  replicaCount: 1
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: 8.8.2
    pullPolicy: Always
  imagePullSecrets: []
  nameOverride: ''
  fullnameOverride: ''
  configmap:
    data:
      node.name: es01
      ES_JAVA_OPTS: '-Xms2g -Xmx2g'
      cluster.name: 'es-cluster'
      bootstrap.memory_lock: 'true'
      discovery.type: 'single-node'
  secret:
    data:
      ELASTIC_PASSWORD: cGFzc3dvcmQ=
  # Allows you to load environment variables from kubernetes secret or config map
  envFrom:
    - configMapRef:
        name: scicat-elastic-search-dev-configmap
  env:
    - name: ELASTIC_PASSWORD
      valueFrom:
        secretKeyRef:
          name: scicat-elastic-search
          key: ELASTIC_PASSWORD
  # - secretRef:
  #     name: env-secret
  # - configMapRef:
  #     name: config-map
  ingress:
    enabled: false
  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    capabilities:
      drop:
        - ALL
    # readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
  terminationGracePeriod: 120
  sysctlVmMaxMapCount: 262144
  service:
    type: ClusterIP
    port: 9200
  esJavaOpts: '-Xmx2g -Xms2g'
  resources:
    requests:
      cpu: '100m'
      memory: '4Gi'
    limits:
      cpu: '1000m'
      memory: 4Gi
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 5
  clusterHealthCheckParams: 'wait_for_status=green&timeout=1s'
  nodeSelector: {}
  tolerations: []
  affinity: {}
  postfix: '-dev'

logstash:
  enabled: false
  filebeat_image: "docker.elastic.co/beats/filebeat-oss:8.10.2"
  filebeat_resources:
    limits:
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
  logstash_image: "docker.elastic.co/logstash/logstash-oss:8.10.2"
  environment: "qa"
  cern_monit:
    enabled: false
    producer: "invenio"

kerberos:
  enabled: false
  secret_name: ""
  image: ""
  args: []
  initArgs: []
  resources:
    limits:
      cpu: 100m
      memory: 20Mi
    requests:
      cpu: 10m
      memory: 2Mi
